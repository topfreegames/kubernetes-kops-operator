---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: kopsmachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: KopsMachinePool
    listKind: KopsMachinePoolList
    plural: kopsmachinepools
    shortNames:
    - kmp
    singular: kopsmachinepool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: KopsMachinePool is the Schema for the kopsmachinepools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: KopsMachinePoolSpec defines the desired state of KopsMachinePool
            properties:
              clusterName:
                description: ClusterName is the name of the Cluster this object belongs
                  to.
                minLength: 1
                type: string
              karpenterProvisioners:
                description: KarpenterProvisioners is the list of provisioners to
                  be applied.
                items:
                  description: Provisioner is the Schema for the Provisioners API
                  properties:
                    apiVersion:
                      description: 'APIVersion defines the versioned schema of this
                        representation of an object. Servers should convert recognized
                        schemas to the latest internal value, and may reject unrecognized
                        values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                      type: string
                    kind:
                      description: 'Kind is a string value representing the REST resource
                        this object represents. Servers may infer this from the endpoint
                        the client submits requests to. Cannot be updated. In CamelCase.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    metadata:
                      type: object
                    spec:
                      description: ProvisionerSpec is the top level provisioner specification.
                        Provisioners launch nodes in response to pods that are unschedulable.
                        A single provisioner is capable of managing a diverse set
                        of nodes. Node properties are determined from a combination
                        of provisioner and pod scheduling constraints.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: Annotations are applied to every node.
                          type: object
                        consolidation:
                          description: Consolidation are the consolidation parameters
                          properties:
                            enabled:
                              description: Enabled enables consolidation if it has
                                been set
                              type: boolean
                          type: object
                        kubeletConfiguration:
                          description: KubeletConfiguration are options passed to
                            the kubelet when provisioning nodes
                          properties:
                            clusterDNS:
                              description: clusterDNS is a list of IP addresses for
                                the cluster DNS server. Note that not all providers
                                may use all addresses.
                              items:
                                type: string
                              type: array
                            containerRuntime:
                              description: ContainerRuntime is the container runtime
                                to be used with your worker nodes.
                              type: string
                            cpuCFSQuota:
                              description: CPUCFSQuota enables CPU CFS quota enforcement
                                for containers that specify CPU limits.
                              type: boolean
                            evictionHard:
                              additionalProperties:
                                type: string
                              description: EvictionHard is the map of signal names
                                to quantities that define hard eviction thresholds
                              type: object
                            evictionMaxPodGracePeriod:
                              description: EvictionMaxPodGracePeriod is the maximum
                                allowed grace period (in seconds) to use when terminating
                                pods in response to soft eviction thresholds being
                                met.
                              format: int32
                              type: integer
                            evictionSoft:
                              additionalProperties:
                                type: string
                              description: EvictionSoft is the map of signal names
                                to quantities that define soft eviction thresholds
                              type: object
                            evictionSoftGracePeriod:
                              additionalProperties:
                                type: string
                              description: EvictionSoftGracePeriod is the map of signal
                                names to quantities that define grace periods for
                                each eviction signal
                              type: object
                            imageGCHighThresholdPercent:
                              description: ImageGCHighThresholdPercent is the percent
                                of disk usage after which image garbage collection
                                is always run. The percent is calculated by dividing
                                this field value by 100, so this field must be between
                                0 and 100, inclusive. When specified, the value must
                                be greater than ImageGCLowThresholdPercent.
                              format: int32
                              maximum: 100
                              minimum: 0
                              type: integer
                            imageGCLowThresholdPercent:
                              description: ImageGCLowThresholdPercent is the percent
                                of disk usage before which image garbage collection
                                is never run. Lowest disk usage to garbage collect
                                to. The percent is calculated by dividing this field
                                value by 100, so the field value must be between 0
                                and 100, inclusive. When specified, the value must
                                be less than imageGCHighThresholdPercent
                              format: int32
                              maximum: 100
                              minimum: 0
                              type: integer
                            kubeReserved:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: KubeReserved contains resources reserved
                                for Kubernetes system components.
                              type: object
                            maxPods:
                              description: MaxPods is an override for the maximum
                                number of pods that can run on a worker node instance.
                              format: int32
                              minimum: 0
                              type: integer
                            podsPerCore:
                              description: PodsPerCore is an override for the number
                                of pods that can run on a worker node instance based
                                on the number of cpu cores. This value cannot exceed
                                MaxPods, so, if MaxPods is a lower value, that value
                                will be used.
                              format: int32
                              minimum: 0
                              type: integer
                            systemReserved:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: SystemReserved contains resources reserved
                                for OS system daemons and kernel memory.
                              type: object
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: Labels are layered with Requirements and applied
                            to every node.
                          type: object
                        limits:
                          description: Limits define a set of bounds for provisioning
                            capacity.
                          properties:
                            resources:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: Resources contains all the allocatable
                                resources that Karpenter supports for limiting.
                              type: object
                          type: object
                        provider:
                          description: Provider contains fields specific to your cloudprovider.
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        providerRef:
                          description: ProviderRef is a reference to a dedicated CRD
                            for the chosen provider, that holds additional configuration
                            options
                          properties:
                            apiVersion:
                              description: API version of the referent
                              type: string
                            kind:
                              description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                              type: string
                            name:
                              description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                          required:
                          - name
                          type: object
                        requirements:
                          description: Requirements are layered with Labels and applied
                            to every node.
                          items:
                            description: A node selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: The label key that the selector applies
                                  to.
                                type: string
                              operator:
                                description: Represents a key's relationship to a
                                  set of values. Valid operators are In, NotIn, Exists,
                                  DoesNotExist. Gt, and Lt.
                                type: string
                              values:
                                description: An array of string values. If the operator
                                  is In or NotIn, the values array must be non-empty.
                                  If the operator is Exists or DoesNotExist, the values
                                  array must be empty. If the operator is Gt or Lt,
                                  the values array must have a single element, which
                                  will be interpreted as an integer. This array is
                                  replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        startupTaints:
                          description: StartupTaints are taints that are applied to
                            nodes upon startup which are expected to be removed automatically
                            within a short period of time, typically by a DaemonSet
                            that tolerates the taint. These are commonly used by daemonsets
                            to allow initialization and enforce startup ordering.  StartupTaints
                            are ignored for provisioning purposes in that pods are
                            not required to tolerate a StartupTaint in order to have
                            nodes provisioned for them.
                          items:
                            description: The node this Taint is attached to has the
                              "effect" on any pod that does not tolerate the Taint.
                            properties:
                              effect:
                                description: Required. The effect of the taint on
                                  pods that do not tolerate the taint. Valid effects
                                  are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Required. The taint key to be applied
                                  to a node.
                                type: string
                              timeAdded:
                                description: TimeAdded represents the time at which
                                  the taint was added. It is only written for NoExecute
                                  taints.
                                format: date-time
                                type: string
                              value:
                                description: The taint value corresponding to the
                                  taint key.
                                type: string
                            required:
                            - effect
                            - key
                            type: object
                          type: array
                        taints:
                          description: Taints will be applied to every node launched
                            by the Provisioner. If specified, the provisioner will
                            not provision nodes for pods that do not have matching
                            tolerations. Additional taints will be created that match
                            pod tolerations on a per-node basis.
                          items:
                            description: The node this Taint is attached to has the
                              "effect" on any pod that does not tolerate the Taint.
                            properties:
                              effect:
                                description: Required. The effect of the taint on
                                  pods that do not tolerate the taint. Valid effects
                                  are NoSchedule, PreferNoSchedule and NoExecute.
                                type: string
                              key:
                                description: Required. The taint key to be applied
                                  to a node.
                                type: string
                              timeAdded:
                                description: TimeAdded represents the time at which
                                  the taint was added. It is only written for NoExecute
                                  taints.
                                format: date-time
                                type: string
                              value:
                                description: The taint value corresponding to the
                                  taint key.
                                type: string
                            required:
                            - effect
                            - key
                            type: object
                          type: array
                        ttlSecondsAfterEmpty:
                          description: "TTLSecondsAfterEmpty is the number of seconds
                            the controller will wait before attempting to delete a
                            node, measured from when the node is detected to be empty.
                            A Node is considered to be empty when it does not have
                            pods scheduled to it, excluding daemonsets. \n Termination
                            due to no utilization is disabled if this field is not
                            set."
                          format: int64
                          type: integer
                        ttlSecondsUntilExpired:
                          description: "TTLSecondsUntilExpired is the number of seconds
                            the controller will wait before terminating a node, measured
                            from when the node is created. This is useful to implement
                            features like eventually consistent node upgrade, memory
                            leak protection, and disruption testing. \n Termination
                            due to expiration is disabled if this field is not set."
                          format: int64
                          type: integer
                        weight:
                          description: Weight is the priority given to the provisioner
                            during scheduling. A higher numerical weight indicates
                            that this provisioner will be ordered ahead of other provisioners
                            with lower weights. A provisioner with no weight will
                            be treated as if it is a provisioner with a weight of
                            0.
                          format: int32
                          maximum: 100
                          minimum: 1
                          type: integer
                      type: object
                    status:
                      description: ProvisionerStatus defines the observed state of
                        Provisioner
                      properties:
                        conditions:
                          description: Conditions is the set of conditions required
                            for this provisioner to scale its target, and indicates
                            whether or not those conditions are met.
                          items:
                            description: 'Condition defines a readiness condition
                              for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                            properties:
                              lastTransitionTime:
                                description: LastTransitionTime is the last time the
                                  condition transitioned from one status to another.
                                  We use VolatileTime in place of metav1.Time to exclude
                                  this from creating equality.Semantic differences
                                  (all other things held constant).
                                type: string
                              message:
                                description: A human readable message indicating details
                                  about the transition.
                                type: string
                              reason:
                                description: The reason for the condition's last transition.
                                type: string
                              severity:
                                description: Severity with which to treat failures
                                  of this type of condition. When this is not specified,
                                  it defaults to Error.
                                type: string
                              status:
                                description: Status of the condition, one of True,
                                  False, Unknown.
                                type: string
                              type:
                                description: Type of condition.
                                type: string
                            required:
                            - status
                            - type
                            type: object
                          type: array
                        lastScaleTime:
                          description: LastScaleTime is the last time the Provisioner
                            scaled the number of nodes
                          format: date-time
                          type: string
                        resources:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: Resources is the list of resources that have
                            been provisioned.
                          type: object
                      type: object
                  type: object
                type: array
              kopsInstanceGroupSpec:
                description: 'KopsInstanceGroupSpec declare a desired InstanceGroup
                  Kops resource: https://kops.sigs.k8s.io/instance_groups/'
                properties:
                  additionalSecurityGroups:
                    description: AdditionalSecurityGroups attaches additional security
                      groups (e.g. i-123456)
                    items:
                      type: string
                    type: array
                  additionalUserData:
                    description: AdditionalUserData is any additional user-data to
                      be passed to the host
                    items:
                      description: UserData defines a user-data section
                      properties:
                        content:
                          description: Content is the user-data content
                          type: string
                        name:
                          description: Name is the name of the user-data
                          type: string
                        type:
                          description: Type is the type of user-data
                          type: string
                      type: object
                    type: array
                  associatePublicIP:
                    description: AssociatePublicIP is true if we want instances to
                      have a public IP
                    type: boolean
                  autoscale:
                    description: Autoscale determines if autoscaling will be enabled
                      for this instance group if cluster autoscaler is enabled
                    type: boolean
                  cloudLabels:
                    additionalProperties:
                      type: string
                    description: CloudLabels defines additional tags or labels on
                      cloud provider resources
                    type: object
                  compressUserData:
                    description: CompressUserData compresses parts of the user data
                      to save space
                    type: boolean
                  containerd:
                    description: Containerd specifies override configuration for instance
                      group
                    properties:
                      address:
                        description: Address of containerd's GRPC server (default
                          "/run/containerd/containerd.sock").
                        type: string
                      configOverride:
                        description: ConfigOverride is the complete containerd config
                          file provided by the user.
                        type: string
                      logLevel:
                        description: LogLevel controls the logging details [trace,
                          debug, info, warn, error, fatal, panic] (default "info").
                        type: string
                      nvidiaGPU:
                        description: NvidiaGPU configures the Nvidia GPU runtime.
                        properties:
                          enabled:
                            description: Enabled determines if kOps will install the
                              Nvidia GPU runtime and drivers. They will only be installed
                              on intances that has an Nvidia GPU.
                            type: boolean
                          package:
                            description: Package is the name of the nvidia driver
                              package that will be installed. Default is "nvidia-headless-510-server".
                            type: string
                        type: object
                      packages:
                        description: Packages overrides the URL and hash for the packages.
                        properties:
                          hashAmd64:
                            description: HashAmd64 overrides the hash for the AMD64
                              package.
                            type: string
                          hashArm64:
                            description: HashArm64 overrides the hash for the ARM64
                              package.
                            type: string
                          urlAmd64:
                            description: UrlAmd64 overrides the URL for the AMD64
                              package.
                            type: string
                          urlArm64:
                            description: UrlArm64 overrides the URL for the ARM64
                              package.
                            type: string
                        type: object
                      registryMirrors:
                        additionalProperties:
                          items:
                            type: string
                          type: array
                        description: RegistryMirrors is list of image registries
                        type: object
                      root:
                        description: Root directory for persistent data (default "/var/lib/containerd").
                        type: string
                      runc:
                        description: Runc configures the runc runtime.
                        properties:
                          packages:
                            description: Packages overrides the URL and hash for the
                              packages.
                            properties:
                              hashAmd64:
                                description: HashAmd64 overrides the hash for the
                                  AMD64 package.
                                type: string
                              hashArm64:
                                description: HashArm64 overrides the hash for the
                                  ARM64 package.
                                type: string
                              urlAmd64:
                                description: UrlAmd64 overrides the URL for the AMD64
                                  package.
                                type: string
                              urlArm64:
                                description: UrlArm64 overrides the URL for the ARM64
                                  package.
                                type: string
                            type: object
                          version:
                            description: Version used to pick the runc package.
                            type: string
                        type: object
                      skipInstall:
                        description: SkipInstall prevents kOps from installing and
                          modifying containerd in any way (default "false").
                        type: boolean
                      state:
                        description: State directory for execution state files (default
                          "/run/containerd").
                        type: string
                      version:
                        description: Version used to pick the containerd package.
                        type: string
                    type: object
                  cpuCredits:
                    description: CPUCredits is the credit option for CPU Usage on
                      burstable instance types (AWS only)
                    type: string
                  detailedInstanceMonitoring:
                    description: DetailedInstanceMonitoring defines if detailed-monitoring
                      is enabled (AWS only)
                    type: boolean
                  externalLoadBalancers:
                    description: ExternalLoadBalancers define loadbalancers that should
                      be attached to this instance group
                    items:
                      description: LoadBalancer defines a load balancer
                      properties:
                        loadBalancerName:
                          description: LoadBalancerName to associate with this instance
                            group (AWS ELB)
                          type: string
                        targetGroupARN:
                          description: TargetGroupARN to associate with this instance
                            group (AWS ALB/NLB)
                          type: string
                      type: object
                    type: array
                  fileAssets:
                    description: FileAssets is a collection of file assets for this
                      instance group
                    items:
                      description: FileAssetSpec defines the structure for a file
                        asset
                      properties:
                        content:
                          description: Content is the contents of the file
                          type: string
                        isBase64:
                          description: IsBase64 indicates the contents is base64 encoded
                          type: boolean
                        mode:
                          description: Mode is this file's mode and permission bits
                          type: string
                        name:
                          description: Name is a shortened reference to the asset
                          type: string
                        path:
                          description: Path is the location this file should reside
                          type: string
                        roles:
                          description: Roles is a list of roles the file asset should
                            be applied, defaults to all
                          items:
                            description: InstanceGroupRole describes the roles of
                              the nodes in this InstanceGroup (master or nodes)
                            type: string
                          type: array
                      type: object
                    type: array
                  gcpProvisioningModel:
                    description: 'GCPProvisioningModel: Specifies the provisioning
                      model of the GCP instance. Valid values: ''STANDARD'': (default)
                      standard provisioning with user controlled run time, no discounts
                      ''SPOT'': heavily discounted, no guaranteed run time.'
                    type: string
                  guestAccelerators:
                    description: GuestAccelerators configures additional accelerators
                    items:
                      description: AcceleratorConfig defines an accelerator config
                      properties:
                        acceleratorCount:
                          format: int64
                          type: integer
                        acceleratorType:
                          type: string
                      type: object
                    type: array
                  hooks:
                    description: 'Hooks is a list of hooks for this instance group,
                      note: these can override the cluster wide ones if required'
                    items:
                      description: HookSpec is a definition hook
                      properties:
                        before:
                          description: Before is a series of systemd units which this
                            hook must run before
                          items:
                            type: string
                          type: array
                        enabled:
                          description: 'Enabled indicates if you want the unit switched
                            on. Default: true'
                          type: boolean
                        execContainer:
                          description: ExecContainer is the image itself
                          properties:
                            command:
                              description: Command is the command supplied to the
                                above image
                              items:
                                type: string
                              type: array
                            environment:
                              additionalProperties:
                                type: string
                              description: Environment is a map of environment variables
                                added to the hook
                              type: object
                            image:
                              description: Image is the docker image
                              type: string
                          type: object
                        manifest:
                          description: Manifest is a raw systemd unit file
                          type: string
                        name:
                          description: Name is an optional name for the hook, otherwise
                            the name is kops-hook-<index>
                          type: string
                        requires:
                          description: Requires is a series of systemd units the action
                            requires
                          items:
                            type: string
                          type: array
                        roles:
                          description: Roles is an optional list of roles the hook
                            should be rolled out to, defaults to all
                          items:
                            description: InstanceGroupRole describes the roles of
                              the nodes in this InstanceGroup (master or nodes)
                            type: string
                          type: array
                        useRawManifest:
                          description: UseRawManifest indicates that the contents
                            of Manifest should be used as the contents of the systemd
                            unit, unmodified. Before and Requires are ignored when
                            used together with this value (and validation shouldn't
                            allow them to be set)
                          type: boolean
                      type: object
                    type: array
                  iam:
                    description: IAMProfileSpec defines the identity of the cloud
                      group IAM profile (AWS only).
                    properties:
                      profile:
                        description: Profile is the AWS IAM Profile to attach to instances
                          in this instance group. Specify the ARN for the IAM instance
                          profile. (AWS only)
                        type: string
                    type: object
                  image:
                    description: Image is the instance (ami etc) we should use
                    type: string
                  instanceInterruptionBehavior:
                    description: InstanceInterruptionBehavior defines if a spot instance
                      should be terminated, hibernated, or stopped after interruption
                    type: string
                  instanceMetadata:
                    description: InstanceMetadata defines the EC2 instance metadata
                      service options (AWS Only)
                    properties:
                      httpPutResponseHopLimit:
                        description: HTTPPutResponseHopLimit is the desired HTTP PUT
                          response hop limit for instance metadata requests. The larger
                          the number, the further instance metadata requests can travel.
                          The default value is 1.
                        format: int64
                        type: integer
                      httpTokens:
                        description: HTTPTokens is the state of token usage for the
                          instance metadata requests. If the parameter is not specified
                          in the request, the default state is "required".
                        type: string
                    type: object
                  instanceProtection:
                    description: InstanceProtection makes new instances in an autoscaling
                      group protected from scale in
                    type: boolean
                  kubelet:
                    description: Kubelet overrides kubelet config from the ClusterSpec
                    properties:
                      allowPrivileged:
                        description: AllowPrivileged enables containers to request
                          privileged mode (defaults to false)
                        type: boolean
                      allowedUnsafeSysctls:
                        description: AllowedUnsafeSysctls are passed to the kubelet
                          config to whitelist allowable sysctls
                        items:
                          type: string
                        type: array
                      anonymousAuth:
                        description: AnonymousAuth permits you to control auth to
                          the kubelet api
                        type: boolean
                      apiServers:
                        description: APIServers is not used for clusters version 1.6
                          and later - flag removed
                        type: string
                      authenticationTokenWebhook:
                        description: AuthenticationTokenWebhook uses the TokenReview
                          API to determine authentication for bearer tokens.
                        type: boolean
                      authenticationTokenWebhookCacheTTL:
                        description: AuthenticationTokenWebhook sets the duration
                          to cache responses from the webhook token authenticator.
                          Default is 2m. (default 2m0s)
                        type: string
                      authorizationMode:
                        description: AuthorizationMode is the authorization mode the
                          kubelet is running in
                        type: string
                      babysitDaemons:
                        description: The node has babysitter process monitoring docker
                          and kubelet. Removed as of 1.7
                        type: boolean
                      bootstrapKubeconfig:
                        description: BootstrapKubeconfig is the path to a kubeconfig
                          file that will be used to get client certificate for kubelet
                        type: string
                      cgroupDriver:
                        description: CgroupDriver allows the explicit setting of the
                          kubelet cgroup driver. If omitted, defaults to cgroupfs.
                        type: string
                      cgroupRoot:
                        description: cgroupRoot is the root cgroup to use for pods.
                          This is handled by the container runtime on a best effort
                          basis.
                        type: string
                      clientCAFile:
                        description: ClientCAFile is the path to a CA certificate
                        type: string
                      cloudProvider:
                        description: CloudProvider is the provider for cloud services.
                        type: string
                      clusterDNS:
                        description: ClusterDNS is the IP address for a cluster DNS
                          server
                        type: string
                      clusterDomain:
                        description: ClusterDomain is the DNS domain for this cluster
                        type: string
                      configureCbr0:
                        description: configureCBR0 enables the kubelet to configure
                          cbr0 based on Node.Spec.PodCIDR.
                        type: boolean
                      containerLogMaxFiles:
                        description: ContainerLogMaxFiles is the maximum number of
                          container log files that can be present for a container.
                          The number must be >= 2.
                        format: int32
                        type: integer
                      containerLogMaxSize:
                        description: ContainerLogMaxSize is the maximum size (e.g.
                          10Mi) of container log file before it is rotated.
                        type: string
                      cpuCFSQuota:
                        description: CPUCFSQuota enables CPU CFS quota enforcement
                          for containers that specify CPU limits
                        type: boolean
                      cpuCFSQuotaPeriod:
                        description: CPUCFSQuotaPeriod sets CPU CFS quota period value,
                          cpu.cfs_period_us, defaults to Linux Kernel default
                        type: string
                      cpuManagerPolicy:
                        description: CpuManagerPolicy allows for changing the default
                          policy of None to static
                        type: string
                      dockerDisableSharedPID:
                        description: DockerDisableSharedPID uses a shared PID namespace
                          for containers in a pod.
                        type: boolean
                      enableCadvisorJsonEndpoints:
                        description: EnableCadvisorJsonEndpoints enables cAdvisor
                          json `/spec` and `/stats/*` endpoints. Defaults to False.
                        type: boolean
                      enableCustomMetrics:
                        description: Enable gathering custom metrics.
                        type: boolean
                      enableDebuggingHandlers:
                        description: EnableDebuggingHandlers enables server endpoints
                          for log collection and local running of containers and commands
                        type: boolean
                      enforceNodeAllocatable:
                        description: Enforce Allocatable across pods whenever the
                          overall usage across all pods exceeds Allocatable.
                        type: string
                      eventBurst:
                        description: EventBurst temporarily allows event records to
                          burst to this number, while still not exceeding EventQPS.
                          Only used if EventQPS > 0.
                        format: int32
                        type: integer
                      eventQPS:
                        description: EventQPS if > 0, limit event creations per second
                          to this value.  If 0, unlimited.
                        format: int32
                        type: integer
                      evictionHard:
                        description: Comma-delimited list of hard eviction expressions.  For
                          example, 'memory.available<300Mi'.
                        type: string
                      evictionMaxPodGracePeriod:
                        description: Maximum allowed grace period (in seconds) to
                          use when terminating pods in response to a soft eviction
                          threshold being met.
                        format: int32
                        type: integer
                      evictionMinimumReclaim:
                        description: Comma-delimited list of minimum reclaims (e.g.
                          imagefs.available=2Gi) that describes the minimum amount
                          of resource the kubelet will reclaim when performing a pod
                          eviction if that resource is under pressure.
                        type: string
                      evictionPressureTransitionPeriod:
                        description: Duration for which the kubelet has to wait before
                          transitioning out of an eviction pressure condition.
                        type: string
                      evictionSoft:
                        description: Comma-delimited list of soft eviction expressions.  For
                          example, 'memory.available<300Mi'.
                        type: string
                      evictionSoftGracePeriod:
                        description: Comma-delimited list of grace periods for each
                          soft eviction signal.  For example, 'memory.available=30s'.
                        type: string
                      experimentalAllowedUnsafeSysctls:
                        description: ExperimentalAllowedUnsafeSysctls are passed to
                          the kubelet config to whitelist allowable sysctls Was promoted
                          to beta and renamed. https://github.com/kubernetes/kubernetes/pull/63717
                        items:
                          type: string
                        type: array
                      failSwapOn:
                        description: Tells the Kubelet to fail to start if swap is
                          enabled on the node.
                        type: boolean
                      featureGates:
                        additionalProperties:
                          type: string
                        description: FeatureGates is set of key=value pairs that describe
                          feature gates for alpha/experimental features.
                        type: object
                      hairpinMode:
                        description: 'How should the kubelet configure the container
                          bridge for hairpin packets. Setting this flag allows endpoints
                          in a Service to loadbalance back to themselves if they should
                          try to access their own Service. Values: "promiscuous-bridge":
                          make the container bridge promiscuous. "hairpin-veth":       set
                          the hairpin flag on container veth interfaces. "none":               do
                          nothing. Setting --configure-cbr0 to false implies that
                          to achieve hairpin NAT one must set --hairpin-mode=veth-flag,
                          because bridge assumes the existence of a container bridge
                          named cbr0.'
                        type: string
                      hostnameOverride:
                        description: HostnameOverride is the hostname used to identify
                          the kubelet instead of the actual hostname.
                        type: string
                      housekeepingInterval:
                        description: HousekeepingInterval allows to specify interval
                          between container housekeepings.
                        type: string
                      imageGCHighThresholdPercent:
                        description: ImageGCHighThresholdPercent is the percent of
                          disk usage after which image garbage collection is always
                          run.
                        format: int32
                        type: integer
                      imageGCLowThresholdPercent:
                        description: ImageGCLowThresholdPercent is the percent of
                          disk usage before which image garbage collection is never
                          run. Lowest disk usage to garbage collect to.
                        format: int32
                        type: integer
                      imagePullProgressDeadline:
                        description: ImagePullProgressDeadline is the timeout for
                          image pulls If no pulling progress is made before this deadline,
                          the image pulling will be cancelled. (default 1m0s)
                        type: string
                      kernelMemcgNotification:
                        description: Integrate with the kernel memcg notification
                          to determine if memory eviction thresholds are crossed rather
                          than polling.
                        type: boolean
                      kubeReserved:
                        additionalProperties:
                          type: string
                        description: Resource reservation for kubernetes system daemons
                          like the kubelet, container runtime, node problem detector,
                          etc.
                        type: object
                      kubeReservedCgroup:
                        description: Control group for kube daemons.
                        type: string
                      kubeconfigPath:
                        description: KubeconfigPath is the path of kubeconfig for
                          the kubelet
                        type: string
                      kubeletCgroups:
                        description: KubeletCgroups is the absolute name of cgroups
                          to isolate the kubelet in.
                        type: string
                      logFormat:
                        description: 'LogFormat is the logging format of the kubelet.
                          Supported values: text, json. Default: text'
                        type: string
                      logLevel:
                        description: LogLevel is the logging level of the kubelet
                        format: int32
                        type: integer
                      maxPods:
                        description: MaxPods is the number of pods that can run on
                          this Kubelet.
                        format: int32
                        type: integer
                      networkPluginMTU:
                        description: NetworkPluginMTU is the MTU to be passed to the
                          network plugin, and overrides the default MTU for cases
                          where it cannot be automatically computed (such as IPSEC).
                        format: int32
                        type: integer
                      networkPluginName:
                        description: NetworkPluginName is the name of the network
                          plugin to be invoked for various events in kubelet/pod lifecycle
                        type: string
                      nodeLabels:
                        additionalProperties:
                          type: string
                        description: NodeLabels to add when registering the node in
                          the cluster.
                        type: object
                      nodeStatusUpdateFrequency:
                        description: NodeStatusUpdateFrequency Specifies how often
                          kubelet posts node status to master (default 10s) must work
                          with nodeMonitorGracePeriod in KubeControllerManagerConfig.
                        type: string
                      nonMasqueradeCIDR:
                        description: 'NonMasqueradeCIDR configures masquerading: traffic
                          to IPs outside this range will use IP masquerade.'
                        type: string
                      nvidiaGPUs:
                        description: NvidiaGPUs is the number of NVIDIA GPU devices
                          on this node.
                        format: int32
                        type: integer
                      podCIDR:
                        description: PodCIDR is the CIDR to use for pod IP addresses,
                          only used in standalone mode. In cluster mode, this is obtained
                          from the master.
                        type: string
                      podInfraContainerImage:
                        description: PodInfraContainerImage is the image whose network/ipc
                          containers in each pod will use.
                        type: string
                      podManifestPath:
                        description: config is the path to the config file or directory
                          of files
                        type: string
                      podPidsLimit:
                        description: PodPidsLimit is the maximum number of pids in
                          any pod.
                        format: int64
                        type: integer
                      protectKernelDefaults:
                        description: 'Default kubelet behaviour for kernel tuning.
                          If set, kubelet errors if any of kernel tunables is different
                          than kubelet defaults. (DEPRECATED: This parameter should
                          be set via the config file specified by the Kubelet''s --config
                          flag.'
                        type: boolean
                      readOnlyPort:
                        description: ReadOnlyPort is the port used by the kubelet
                          api for read-only access (default 10255)
                        format: int32
                        type: integer
                      reconcileCIDR:
                        description: ReconcileCIDR is Reconcile node CIDR with the
                          CIDR specified by the API server. No-op if register-node
                          or configure-cbr0 is false.
                        type: boolean
                      registerNode:
                        description: RegisterNode enables automatic registration with
                          the apiserver.
                        type: boolean
                      registerSchedulable:
                        description: registerSchedulable tells the kubelet to register
                          the node as schedulable. No-op if register-node is false.
                        type: boolean
                      registryBurst:
                        description: RegistryBurst Maximum size of a bursty pulls,
                          temporarily allows pulls to burst to this number, while
                          still not exceeding registry-qps. Only used if --registry-qps
                          > 0 (default 10)
                        format: int32
                        type: integer
                      registryPullQPS:
                        description: RegistryPullQPS if > 0, limit registry pull QPS
                          to this value.  If 0, unlimited. (default 5)
                        format: int32
                        type: integer
                      requireKubeconfig:
                        description: RequireKubeconfig indicates a kubeconfig is required
                        type: boolean
                      resolvConf:
                        description: ResolverConfig is the resolver configuration
                          file used as the basis for the container DNS resolution
                          configuration."), []
                        type: string
                      rootDir:
                        description: RootDir is the directory path for managing kubelet
                          files (volume mounts,etc)
                        type: string
                      rotateCertificates:
                        description: rotateCertificates enables client certificate
                          rotation.
                        type: boolean
                      runtimeCgroups:
                        description: Cgroups that container runtime is expected to
                          be isolated in.
                        type: string
                      runtimeRequestTimeout:
                        description: RuntimeRequestTimeout is timeout for runtime
                          requests on - pull, logs, exec and attach
                        type: string
                      seccompProfileRoot:
                        description: SeccompProfileRoot is the directory path for
                          seccomp profiles.
                        type: string
                      serializeImagePulls:
                        description: '// SerializeImagePulls when enabled, tells the
                          Kubelet to pull images one // at a time. We recommend *not*
                          changing the default value on nodes that // run docker daemon
                          with version  < 1.9 or an Aufs storage backend. // Issue
                          #10959 has more details.'
                        type: boolean
                      shutdownGracePeriod:
                        description: 'ShutdownGracePeriod specifies the total duration
                          that the node should delay the shutdown by. Default: 30s'
                        type: string
                      shutdownGracePeriodCriticalPods:
                        description: 'ShutdownGracePeriodCriticalPods specifies the
                          duration used to terminate critical pods during a node shutdown.
                          Default: 10s'
                        type: string
                      streamingConnectionIdleTimeout:
                        description: StreamingConnectionIdleTimeout is the maximum
                          time a streaming connection can be idle before the connection
                          is automatically closed
                        type: string
                      systemCgroups:
                        description: SystemCgroups is absolute name of cgroups in
                          which to place all non-kernel processes that are not already
                          in a container. Empty for no container. Rolling back the
                          flag requires a reboot.
                        type: string
                      systemReserved:
                        additionalProperties:
                          type: string
                        description: Capture resource reservation for OS system daemons
                          like sshd, udev, etc.
                        type: object
                      systemReservedCgroup:
                        description: Parent control group for OS system daemons.
                        type: string
                      taints:
                        description: Taints to add when registering a node in the
                          cluster
                        items:
                          type: string
                        type: array
                      tlsCertFile:
                        description: 'TODO: Remove unused TLSCertFile'
                        type: string
                      tlsCipherSuites:
                        description: TLSCipherSuites indicates the allowed TLS cipher
                          suite
                        items:
                          type: string
                        type: array
                      tlsMinVersion:
                        description: TLSMinVersion indicates the minimum TLS version
                          allowed
                        type: string
                      tlsPrivateKeyFile:
                        description: 'TODO: Remove unused TLSPrivateKeyFile'
                        type: string
                      topologyManagerPolicy:
                        description: TopologyManagerPolicy determines the allocation
                          policy for the topology manager.
                        type: string
                      volumePluginDirectory:
                        description: The full path of the directory in which to search
                          for additional third party volume plugins (this path must
                          be writeable, dependent on your choice of OS)
                        type: string
                      volumeStatsAggPeriod:
                        description: VolumeStatsAggPeriod is the interval for kubelet
                          to calculate and cache the volume disk usage for all pods
                          and volumes
                        type: string
                    type: object
                  machineType:
                    description: MachineType is the instance class
                    type: string
                  manager:
                    description: Manager determines what is managing the node lifecycle
                    type: string
                  maxInstanceLifetime:
                    description: MaxInstanceLifetime to the maximum amount of time,
                      in seconds, that an instance can be in service. Value expected
                      must be in form of duration ("ms", "s", "m", "h")
                    type: string
                  maxPrice:
                    description: MaxPrice indicates this is a spot-pricing group,
                      with the specified value as our max-price bid
                    type: string
                  maxSize:
                    description: MaxSize is the maximum size of the pool
                    format: int32
                    type: integer
                  minSize:
                    description: MinSize is the minimum size of the pool
                    format: int32
                    type: integer
                  mixedInstancesPolicy:
                    description: MixedInstancesPolicy defined a optional backing of
                      an AWS ASG by a EC2 Fleet (AWS Only)
                    properties:
                      instanceRequirements:
                        description: InstanceRequirements is a list of requirements
                          for any instance type we are willing to run in the EC2 fleet.
                        properties:
                          cpu:
                            properties:
                              max:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              min:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                          memory:
                            properties:
                              max:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              min:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                        type: object
                      instances:
                        description: Instances is a list of instance types which we
                          are willing to run in the EC2 fleet
                        items:
                          type: string
                        type: array
                      onDemandAboveBase:
                        description: OnDemandAboveBase controls the percentages of
                          On-Demand Instances and Spot Instances for your additional
                          capacity beyond OnDemandBase. The range is 0–100. The default
                          value is 100. If you leave this parameter set to 100, the
                          percentages are 100% for On-Demand Instances and 0% for
                          Spot Instances.
                        format: int64
                        type: integer
                      onDemandAllocationStrategy:
                        description: OnDemandAllocationStrategy indicates how to allocate
                          instance types to fulfill On-Demand capacity
                        type: string
                      onDemandBase:
                        description: OnDemandBase is the minimum amount of the Auto
                          Scaling group's capacity that must be fulfilled by On-Demand
                          Instances. This base portion is provisioned first as your
                          group scales.
                        format: int64
                        type: integer
                      spotAllocationStrategy:
                        description: SpotAllocationStrategy diversifies your Spot
                          capacity across multiple instance types to find the best
                          pricing. Higher Spot availability may result from a larger
                          number of instance types to choose from.
                        type: string
                      spotInstancePools:
                        description: SpotInstancePools is the number of Spot pools
                          to use to allocate your Spot capacity (defaults to 2) pools
                          are determined from the different instance types in the
                          Overrides array of LaunchTemplate
                        format: int64
                        type: integer
                    type: object
                  nodeLabels:
                    additionalProperties:
                      type: string
                    description: NodeLabels indicates the kubernetes labels for nodes
                      in this instance group
                    type: object
                  packages:
                    description: Packages specifies additional packages to be installed.
                    items:
                      type: string
                    type: array
                  role:
                    description: 'Type determines the role of instances in this instance
                      group: masters or nodes'
                    type: string
                  rollingUpdate:
                    description: RollingUpdate defines the rolling-update behavior
                    properties:
                      drainAndTerminate:
                        description: DrainAndTerminate enables draining and terminating
                          nodes during rolling updates. Defaults to true.
                        type: boolean
                      maxSurge:
                        anyOf:
                        - type: integer
                        - type: string
                        description: 'MaxSurge is the maximum number of extra nodes
                          that can be created during the update. The value can be
                          an absolute number (for example 5) or a percentage of desired
                          machines (for example 10%). The absolute number is calculated
                          from a percentage by rounding up. Has no effect on instance
                          groups with role "Master". Defaults to 1 on AWS, 0 otherwise.
                          Example: when this is set to 30%, the InstanceGroup can
                          be scaled up immediately when the rolling update starts,
                          such that the total number of old and new nodes do not exceed
                          130% of desired nodes.'
                        x-kubernetes-int-or-string: true
                      maxUnavailable:
                        anyOf:
                        - type: integer
                        - type: string
                        description: 'MaxUnavailable is the maximum number of nodes
                          that can be unavailable during the update. The value can
                          be an absolute number (for example 5) or a percentage of
                          desired nodes (for example 10%). The absolute number is
                          calculated from a percentage by rounding down. Defaults
                          to 1 if MaxSurge is 0, otherwise defaults to 0. Example:
                          when this is set to 30%, the InstanceGroup can be scaled
                          down to 70% of desired nodes immediately when the rolling
                          update starts. Once new nodes are ready, more old nodes
                          can be drained, ensuring that the total number of nodes
                          available at all times during the update is at least 70%
                          of desired nodes.'
                        x-kubernetes-int-or-string: true
                    type: object
                  rootVolumeEncryption:
                    description: RootVolumeEncryption enables EBS root volume encryption
                      for an instance
                    type: boolean
                  rootVolumeEncryptionKey:
                    description: RootVolumeEncryptionKey provides the key identifier
                      for root volume encryption
                    type: string
                  rootVolumeIOPS:
                    description: RootVolumeIOPS is the provisioned IOPS when the volume
                      type is io1, io2 or gp3 (AWS only).
                    format: int32
                    type: integer
                  rootVolumeOptimization:
                    description: RootVolumeOptimization enables EBS optimization for
                      an instance
                    type: boolean
                  rootVolumeSize:
                    description: RootVolumeSize is the size of the EBS root volume
                      to use, in GB
                    format: int32
                    type: integer
                  rootVolumeThroughput:
                    description: RootVolumeThroughput is the volume throughput in
                      MBps when the volume type is gp3 (AWS only).
                    format: int32
                    type: integer
                  rootVolumeType:
                    description: RootVolumeType is the type of the EBS root volume
                      to use (e.g. gp2)
                    type: string
                  securityGroupOverride:
                    description: SecurityGroupOverride overrides the default security
                      group created by Kops for this IG (AWS only).
                    type: string
                  spotDurationInMinutes:
                    description: SpotDurationInMinutes reserves a spot block for the
                      period specified
                    format: int64
                    type: integer
                  subnets:
                    description: Subnets is the names of the Subnets (as specified
                      in the Cluster) where machines in this instance group should
                      be placed
                    items:
                      type: string
                    type: array
                  suspendProcesses:
                    description: SuspendProcesses disables the listed Scaling Policies
                    items:
                      type: string
                    type: array
                  sysctlParameters:
                    description: SysctlParameters will configure kernel parameters
                      using sysctl(8). When specified, each parameter must follow
                      the form variable=value, the way it would appear in sysctl.conf.
                    items:
                      type: string
                    type: array
                  taints:
                    description: Taints indicates the kubernetes taints for nodes
                      in this instance group
                    items:
                      type: string
                    type: array
                  tenancy:
                    description: Describes the tenancy of this instance group. Can
                      be either default or dedicated. Currently only applies to AWS.
                    type: string
                  updatePolicy:
                    description: 'UpdatePolicy determines the policy for applying
                      upgrades automatically. If specified, this value overrides a
                      value specified in the Cluster''s "spec.updatePolicy" field.
                      Valid values: ''automatic'' (default): apply updates automatically
                      (apply OS security upgrades, avoiding rebooting when possible)
                      ''external'': do not apply updates automatically; they are applied
                      manually or by an external system'
                    type: string
                  volumeMounts:
                    description: VolumeMounts a collection of volume mounts
                    items:
                      description: VolumeMountSpec defines the specification for mounting
                        a device
                      properties:
                        device:
                          description: Device is the device name to provision and
                            mount
                          type: string
                        filesystem:
                          description: Filesystem is the filesystem to mount
                          type: string
                        formatOptions:
                          description: FormatOptions is a collection of options passed
                            when formatting the device
                          items:
                            type: string
                          type: array
                        mountOptions:
                          description: MountOptions is a collection of mount options
                            - @TODO need to be added
                          items:
                            type: string
                          type: array
                        path:
                          description: Path is the location to mount the device
                          type: string
                      type: object
                    type: array
                  volumes:
                    description: Volumes is a collection of additional volumes to
                      create for instances within this instance group
                    items:
                      description: VolumeSpec defined the spec for an additional volume
                        attached to the instance group
                      properties:
                        deleteOnTermination:
                          description: DeleteOnTermination configures volume retention
                            policy upon instance termination. The volume is deleted
                            by default. Cluster deletion does not remove retained
                            volumes.
                          type: boolean
                        device:
                          description: Device is an optional device name of the block
                            device
                          type: string
                        encrypted:
                          description: Encrypted indicates you want to encrypt the
                            volume
                          type: boolean
                        iops:
                          description: IOPS is the provisioned IOPS for the volume
                            when the volume type is io1, io2 or gp3 (AWS only).
                          format: int64
                          type: integer
                        key:
                          description: Key is the encryption key identifier for the
                            volume
                          type: string
                        size:
                          description: Size is the size of the volume in GB
                          format: int64
                          type: integer
                        throughput:
                          description: Throughput is the volume throughput in MBps
                            when the volume type is gp3 (AWS only).
                          format: int64
                          type: integer
                        type:
                          description: Type is the type of volume to create and is
                            cloud specific
                          type: string
                      type: object
                    type: array
                  warmPool:
                    description: WarmPool specifies a pool of pre-warmed instances
                      for later use (AWS only).
                    properties:
                      enableLifecycleHook:
                        description: EnableLifecyleHook determines if an ASG lifecycle
                          hook will be added ensuring that nodeup runs to completion.
                          Note that the metadata API must be protected from arbitrary
                          Pods when this is enabled.
                        type: boolean
                      maxSize:
                        description: MaxSize is the maximum size of the warm pool.
                          The desired size of the instance group is subtracted from
                          this number to determine the desired size of the warm pool
                          (unless the resulting number is smaller than MinSize). The
                          default is the instance group's MaxSize.
                        format: int64
                        type: integer
                      minSize:
                        description: MinSize is the minimum size of the warm pool.
                        format: int64
                        type: integer
                    type: object
                  zones:
                    description: Zones is the names of the Zones where machines in
                      this instance group should be placed This is needed for regional
                      subnets (e.g. GCE), to restrict placement to particular zones
                    items:
                      type: string
                    type: array
                type: object
              providerID:
                description: ProviderID is the ARN of the associated ASG
                type: string
              providerIDList:
                description: ProviderIDList are the identification IDs of machine
                  instances provided by the provider. This field must match the provider
                  IDs as seen on the node objects corresponding to a machine pool's
                  machine instances.
                items:
                  type: string
                type: array
              spotInstOptions:
                additionalProperties:
                  type: string
                description: 'Spot.io metadata labels: https://kops.sigs.k8s.io/getting_started/spot-ocean/'
                type: object
            required:
            - clusterName
            - kopsInstanceGroupSpec
            type: object
          status:
            description: KopsMachinePoolStatus defines the observed state of KopsMachinePool
            properties:
              conditions:
                description: Conditions defines current service state of the KopsMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              failureMessage:
                description: ErrorMessage indicates that there is a terminal problem
                  reconciling the state, and will be set to a descriptive error message.
                type: string
              ready:
                default: false
                description: Ready denotes that the API Server is ready to receive
                  requests.
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
